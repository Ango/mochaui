Fx.RegPoint={TopLeft:{x:0,y:0},Top:{x:0.5,y:0},TopRight:{x:1,y:0},Left:{x:0,y:0.5},Center:{x:0.5,y:0.5},Right:{x:1,y:0.5},BottomLeft:{x:0,y:1},Bottom:{x:0.5,y:1},BottomRight:{x:1,y:1}};Fx.Morpher=new Class({Extends:Fx.CSS,options:{path:null,regpoint:Fx.RegPoint.TopLeft,usepath:["top","left"]},initialize:function(b,a){this.element=this.subject=$(b);this.parent(a)},set:function(a){if(typeof a=="string"){a=this.search(a)}for(var b in a){this.render(this.element,b,a[b],this.options.unit)}return this},getRegistration:function(b,a){},translate:function(d,b,f){var e=(b=="x"?"width":"height");var a=parseInt((d-(parseInt(this.element.getStyle(e))*this.options.regpoint[b])));var c=[{value:a,parser:f[0].parser}];c.$family={name:"fx:css:value"};return c},compute:function(f,g,h){var b={};var e,c;var i=(this.options.path?this.options.path:false);for(var a in f){if(i&&this.options.usepath.contains(a)){var d=i.getCoordinates(1-h);if(a=="left"){e=d?d.x:null}if(a=="top"){c=d?d.y:null}}switch(a){case"left":b[a]=(i?this.translate(e,"x",f[a]):this.parent(f[a],g[a],h));break;case"top":b[a]=(i?this.translate(c,"y",f[a]):this.parent(f[a],g[a],h));break;case"width":b[a]=this.parent(f[a],g[a],h);break;case"height":b[a]=this.parent(f[a],g[a],h);default:b[a]=this.parent(f[a],g[a],h)}}return b},start:function(c,b){if(!c){c={}}if(!this.check(arguments.callee,c)){return this}if(typeof c=="string"){c=this.search(c)}var d=this.options.usepath;if(this.options.path&&d.length){if(d.contains("top")){$extend(c,{top:[0,1]})}if(d.contains("left")){$extend(c,{left:[0,1]})}}var g={},f={};for(var e in c){var a=this.prepare(this.element,e,c[e]);g[e]=a.from;f[e]=a.to}return this.parent(g,f)}});Element.Properties.morpher={set:function(a){var b=this.retrieve("morpher");if(b){b.cancel()}return this.eliminate("morpher").store("morpher:options",$extend({link:"cancel"},a))},get:function(a){if(a||!this.retrieve("morpher")){if(a||!this.retrieve("morpher:options")){this.set("morpher",a)}this.store("morpher",new Fx.Morpher(this,this.retrieve("morpher:options")))}return this.retrieve("morpher")}};Element.implement({morpher:function(b,a){this.get("morpher").start(b,a);return this}});Fx.BasePath=new Class({Implements:Options,options:{},initialize:function(a){this.setOptions(a)}});Fx.Path=new Class({Implements:Options,Extends:Fx.BasePath,options:{axis:"top",origin:{x:0,y:0}},initialize:function(b,a){var c=Array.link(arguments,{segments:Array.type,options:Object.type});this.parent(c.options||{});this._segments=c.segments||[];this._blocksize=b?(1/this._segments.length):0;this.setOrigin(this.options.origin)},addSegment:function(a){a.origin=this.options.origin;this._segments.push(a);this._blocksize=(1/this._segments.length)},setOrigin:function(a){this.setOptions({origin:a});this._segments.each(function(b){b.offset=a})},x:function(c){var b=this.getSegment(c);var a=(((c%this._blocksize)*100)/this._blocksize)/100;return b.x(a)},y:function(c){var b=this.getSegment(c);var a=(((c%this._blocksize)*100)/this._blocksize)/100;return b.y(a)},getCoordinates:function(c){var b=this.getSegment(c);var a=(((c%this._blocksize)*100)/this._blocksize)/100;return b?b.getCoordinates(a):null},getSegment:function(b){var c=this._segments.length;var a=(c-Math.floor(b*c))-1;return this._segments[a]},plot:function(a){this._segments.each(function(b){b.plot(a)},this)}});var CubicBezier=new Class({initialize:function(d,c,b,a){this.x0=d[0];this.y0=d[1];this.x1=c[0];this.y1=c[1];this.cx0=b[0];this.cy0=b[1];this.cx1=a[0];this.cy1=a[1];this.offset={x:0,y:0};this.f1=function(e){return(e*e*e)};this.f2=function(e){return(3*e*e*(1-e))};this.f3=function(e){return(3*e*(1-e)*(1-e))};this.f4=function(e){return((1-e)*(1-e)*(1-e))}},x:function(a){return this.x0*this.f1(a)+this.cx0*this.f2(a)+this.cx1*this.f3(a)+this.x1*this.f4(a)},y:function(a){return this.y0*this.f1(a)+this.cy0*this.f2(a)+this.cy1*this.f3(a)+this.y1*this.f4(a)},getCoordinates:function(a){return{x:this.x(a)+this.offset.x,y:this.y(a)+this.offset.y}},getControls:function(){return{c0:{x:this.cx0,y:this.cy0},c1:{x:this.cx1,y:this.cy1}}},getStartEnd:function(){return{p0:{x:this.x0,y:this.y0},p1:{x:this.x1,y:this.y1}}},plot:function(a){for(var b=0;b<1000;b++){a(this.getCoordinates(b/1000),b)}}});var QuadBezier=new Class({Extends:CubicBezier,initialize:function(d,a,b){this.x0=d[0];this.y0=d[1];this.x1=a[0];this.y1=a[1];this.cx0=b[0];this.cy0=b[1];this.cx1=b[0];this.cy1=b[1];this.origin={x:0,y:0};this.f1=function(c){return(c*c*c)};this.f2=function(c){return(3*c*c*(1-c))};this.f3=function(c){return(3*c*(1-c)*(1-c))};this.f4=function(c){return((1-c)*(1-c)*(1-c))}}});